{"version":3,"sources":["task-breaker.dev.js"],"names":["jQuery","document","ready","$","window","load","taskbreaker_file_attachments","attached_files","taskbreaker_process_file_attachment","event","container_id","__form_data","files","target","length","data","FormData","container","file_name","name","file_errors","each","this","size","parseInt","task_breakerProjectSettings","max_file_size","alert","html","key","value","append","k","v","nonce","remove","removeClass","ajax","url","task_breakerAjaxUrl","type","cache","dataType","processData","contentType","success","response","textStatus","jqXHR","error","message","parent","addClass","file","console","log","errorThrown","xhr","myXhr","ajaxSettings","progress","progress_percentage","upload","attr","addEventListener","e","lengthComputable","loaded","max","total","Math","floor","css","width","complete","removeAttr","__ThriveProjectModel","Backbone","View","extend","id","project_id","page","priority","current_page","max_page","min_page","show_completed","total_pages","ThriveProjectModel","__ThriveProjectView","el","model","search","template","events","click .task_breaker-project-tab-li-item-a","click .next-page","click .prev-page","submit #task-breaker-search-task-form","change #task_breaker-task-filter-select","switchView","elementID","$elementClicked","currentTarget","$tab_disabled","$is_tab_enabled","inArray","$active_content","$element","hideFilters","hide","showFilters","show","searchTasks","keywords","val","location","href","encodeURI","filter","currentRoute","history","getFragment","render","next","preventDefault","currPage","prev","single","ticket_id","__this","renderTask","message_long","showEditForm","task_id","__taskEditor","tinymce","get","setContent","task","taskEditor","title","description","getElementById","options","assign_users_meta","members_stack","option","createElement","ID","text","display_name","selected","appendChild","autoSuggestMembers","change","meta","meta_key","unlink_file_template","meta_value","__callback","ajaxurl","method","action","httpResponse","stats","initialize","isShow","__display","__opacity","display","opacity","updateStats","task_status","status","toLowerCase","remaining","completed","ceil","selectElement","clearSelect","$resultTemplate","result","avatar","$state","select2","maximumInputLength","placeholder","allowClear","minimumResultsForSearch","Infinity","minimumInputLength","tag","params","query","group_id","current_group_id","term","user_id_collection","delay","templateResult","ThriveProjectView","__ThriveProjectRoute","Router","routes","tasks","tasks/dashboard","tasks/settings","tasks/completed","tasks/add","tasks/edit/:id","tasks/page/:page","tasks/view/:id","tasks/search/:search_keyword","view","index","dashboard","settings","add","editors","task_breakerTaskDescription","completed_tasks","edit","view_task","ThriveProjectRoute","on","route","start","click","element","taskDescription","getContent","milestone_id","task_breakerTaskConfig","currentProjectId","user_id","currentUserId","file_attachments","trim","taskDescriptionObject","httpRequestParameters","animate","scrollTop","offset","top","form_attr","edit_file_attachment","__confirm","confirm","__ticket_id","_delete_confirm","task_project_id","__http_params","message_text","updateTaskBtn","comment_ticket_id","comment_details","task_priority","comment_completed","details","confirm_delete","comment_ticket","comment_id","fadeOut","projectContent","__projectContentObj","content","prepend","reload","setTimeout","redirect"],"mappings":"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","file":"task-breaker.min.js","sourcesContent":["jQuery(document).ready(function($) {\n\t'use strict'\n\t$(window).load( function() {  \n\n/**\n * This global object will hold the string that contains the name of the file attached in to task.\n * @type Object\n */\nvar taskbreaker_file_attachments = {\n\tattached_files: ''\n};\n/**\n * This function serves as a callback function for the file attachment event handler.\n * @param  object event The onchange event callback argument.\n * @return void\n */\nvar taskbreaker_process_file_attachment = function ( event, container_id, __form_data ) {\n\n    // The upload file event object.\n    var files = event.target.files;\n\n    if ( files.length <= 0 ) {\n        return;\n    }\n    \n    // The form data.\n    var data = new FormData();\n    // The unique container that will hold the file attachments.\n    var container = '#' + container_id + ' ';\n    // The name of the file selected.\n    var file_name = event.target.files[0].name;\n    // The file errors count\n    var file_errors = 0;\n\n    if ( files.length >= 1 ) {\n        $.each( files, function() {\n            if ( this.size > parseInt( task_breakerProjectSettings.max_file_size ) ) {\n                file_errors++;\n            }\n        });\n    }\n\n    if ( file_errors >= 1 ) {\n        alert('There was an error uploading your file. File size exceeded the allowed number of bytes per request.');\n        return;\n    }\n\n    // Change the file name accordingly.\n    $( container + '.tasbreaker-file-attached').html( file_name );\n\n    // Append all files into data form data.\n    $.each( files, function( key, value ) {\n        data.append( key, value );\n    });\n\n    // Append __form_data attribute if not empty.\n    if ( typeof __form_data !== 'null' ) {\n    \t$.each( __form_data, function(k, v){\n    \t\tdata.append(k, v);\n    \t});\n    }\n\n    // Append the action.\n    data.append( 'action', 'task_breaker_transactions_request' );\n    // Append the method.\n    data.append( 'method', 'task_breaker_transaction_task_file_attachment' );\n    // Append the nonce.\n    data.append( 'nonce', task_breakerProjectSettings.nonce );\n    // Remove any existing error messages.\n    $( container + '.taskbreaker-upload-error' ).remove();\n    // Clear any progress messages.\n    $( container + '.taskbreaker-upload-error-text-helper').removeClass('active');\n    $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n\n    // Begin ajax request.\n    $.ajax({\n        url: task_breakerAjaxUrl,\n        type: 'POST',\n        data: data,\n        cache: false,\n        dataType: 'json',\n        processData: false, // Don't process the files.\n        contentType: false, // Set content type to false as jQuery will tell the server its a query string request.\n        success: function( response, textStatus, jqXHR )\n        {\n           \n            if( typeof response.error === 'undefined' )\n            {   \n                if ( response !== 0 ) {\n\n                    if ( response.message === 'fail' ) {\n                        taskbreaker_file_attachments.attached_files = '';\n                        $( container + '.tb-file-attachment-progress').parent().append('<div class=\"taskbreaker-upload-error\">'+response.response+'</div>');\n                        $( container + '.taskbreaker-upload-error-text-helper').addClass('active');\n                        $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n                    } else {\n                        taskbreaker_file_attachments.attached_files = response.file;\n                        $( container + '.taskbreaker-upload-error').remove();\n                        $( container + '.taskbreaker-upload-error-text-helper').removeClass('active');\n                        $( container + '.taskbreaker-upload-success-text-helper').addClass('active');\n                    }\n                    \n                } else {\n                    $( container + '.taskbreaker-upload-error-text-helper').addClass('active');\n                    $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n                    $( container + '.tb-file-attachment-progress').parent().append('<div class=\"taskbreaker-upload-error\">The application did not received any response from the server. Try uploading smaller files.</div>');\n                    taskbreaker_file_attachments.attached_files = '';\n                }\n                \n            }\n            else\n            {\n                // Handle errors here\n                console.log('File attachment errors debug: ' + response.error);\n            }\n        },\n        error: function(jqXHR, textStatus, errorThrown)\n        {\n            // Handle errors here\n            console.log('File attachment errors debug: ' + textStatus);\n            // STOP LOADING SPINNER\n        },\n        xhr: function(){\n\n            var myXhr = $.ajaxSettings.xhr();\n            var progress = 0;\n            var progress_percentage = '0%';\n\n            if ( myXhr.upload ) {\n\n                // For handling the progress of the upload\n                $( container + '.tb-file-attachment-progress-wrap').addClass('active');\n                $( '#task_breaker-submit-btn').attr('disabled', true);\n                $( '#task_breaker-edit-btn').attr('disabled', true);\n\n                myXhr.upload.addEventListener('progress', function(e) {\n\n                    if ( e.lengthComputable ) {\n                        $('progress').attr({\n                            value: e.loaded,\n                            max: e.total,\n                        });\n                        progress = ( e.loaded / e.total ) * 100;\n                        if ( typeof progress === 'number' ) {\n                            progress_percentage = Math.floor( progress ) + '%';\n                            $( container + '.tb-file-attachment-progress-movable').css({\n                                width: progress_percentage\n                            });\n                            $( container + '.taskbreaker-upload-progress-value').html( progress_percentage );\n                        }\n                    }\n\n                } , false );\n\n            }\n            return myXhr;\n        },\n        complete: function() {\n            console.log('finished');\n            $( '#task_breaker-submit-btn').removeAttr( 'disabled' );\n            $( '#task_breaker-edit-btn').removeAttr( 'disabled' );\n        }\n    });\n};\nvar __ThriveProjectModel = Backbone.View.extend({\n    id: 0,\n    project_id: task_breakerProjectSettings.project_id,\n    page: 1,\n    priority: -1,\n    current_page: 1,\n    max_page: 1,\n    min_page: 1,\n    total: 0,\n    show_completed: 'no',\n    total_pages: 0,\n});\n\nvar ThriveProjectModel = new __ThriveProjectModel();\n\nvar __ThriveProjectView = Backbone.View.extend({\n\n    el: 'body',\n    model: ThriveProjectModel,\n    search: '',\n    template: '',\n    events: {\n        \"click .task_breaker-project-tab-li-item-a\": \"switchView\",\n        \"click .next-page\": \"next\",\n        \"click .prev-page\": \"prev\",\n        \"submit #task-breaker-search-task-form\": \"searchTasks\",\n        \"change #task_breaker-task-filter-select\": \"filter\"\n    },\n\n    switchView: function( e, elementID ) {\n\n        if ( e ) {\n            \n            var $elementClicked = $( e.currentTarget );\n            // Disable clicking on the 'Add New Tab' if we are on 'Task Add' Route.\n            var $tab_disabled = ['task_breaker-project-edit-tab', 'task_breaker-project-edit', 'task_breaker-project-add-new'];\n            var $is_tab_enabled = $.inArray( $elementClicked.attr( 'id' ), $tab_disabled );\n            if ( -1 !== $is_tab_enabled ) {\n                return false;\n            } \n\n        }\n\n        // Disable any stay files and progress.\n        taskbreaker_file_attachments.attached_files = '';\n        $('.tasbreaker-file-attached').html('No Files Selected.');\n        $('.tb-file-attachment-progress-wrap').removeClass('active');\n\n        // Disable edit tab.\n        $('#task_breaker-project-edit-tab').css('display', 'none');\n        $('#task_breaker-project-add-new').css('display', 'none');\n\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n\n        var $active_content = \"\";\n\n        if (e) {\n\n            var $element = $(e.currentTarget);\n\n            $active_content = $element.attr('data-content');\n\n            // Activate selected tab.\n            $element.parent().addClass('active');\n\n            $('div[data-content=' + $active_content + ']').addClass('active');\n\n        } else {\n\n            $(elementID).addClass('active');\n\n            $active_content = $(elementID).attr('data-content');\n\n            $('a[data-content=' + $active_content + ']').parent().addClass('active');\n        }\n    },\n\n    hideFilters: function() {\n        $('#task_breaker-tasks-filter').hide();\n    },\n\n    showFilters: function() {\n        $('#task_breaker-tasks-filter').show();\n    },\n\n    searchTasks: function( event ) {\n        \n        var keywords = $('#task_breaker-task-search-field').val();\n\n        if ( 0 === keywords.length ) {\n            location.href = '#tasks';\n        } else {\n            location.href = '#tasks/search/' + encodeURI(keywords);\n        }\n\n        return false;\n\n    },\n\n    filter: function(e) {\n        this.model.priority = e.currentTarget.value;\n\n        var currentRoute = Backbone.history.getFragment();\n\n        if (currentRoute != 'tasks') {\n            location.href = '#tasks';\n        } else {\n            this.render();\n        }\n    },\n\n    next: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage < this.model.max_page) {\n            this.model.page = ++currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    prev: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage > this.model.min_page) {\n            this.model.page = --currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    single: function(ticket_id) {\n        this.progress(true);\n        var __this = this;\n        this.template = 'single_task_index';\n        // load the task\n        this.renderTask(function( response ) {\n\n            __this.progress( false );\n\n            if ( response.message == 'fail' ) {\n                $('#task_breaker-project-tasks').html(\"<p class='info' id='message'>\"+response.message_long+\"</p>\");\n            }\n\n            if ( response.html ) {\n                $('#task_breaker-project-tasks').html(response.html);\n            }\n        });\n    },\n\n    showEditForm: function(task_id) {\n\n        var __this = this;\n\n        var __taskEditor = '';\n\n        if ( typeof tinymce !== 'undefined' ) {\n            \n            __taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n        } \n\n        this.progress(true);\n\n        if ( __taskEditor ) {\n            __taskEditor.setContent( '' );\n        } else {\n            $( '#task_breakerTaskEditDescription' ).val( '' );\n        }\n\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('a#task_breaker-project-edit-tab').css('display', 'block').parent().addClass('active');\n        $('#task_breaker-project-edit-context').addClass('active');\n\n        $('#task_breakerTaskId').attr('disabled', true).val('loading...');\n        $('#task_breakerTaskEditTitle').attr('disabled', true).val('loading...');\n        $(\"#task_breaker-task-edit-select-id\").attr('disabled', true);\n\n        this.model.id = task_id;\n\n        // Render the task.\n        this.renderTask( function( response ) {\n\n            __this.progress( false );\n\n            if ( response.task ) {\n\n                var task = response.task;\n\n                var taskEditor = '';\n\n                if ( typeof tinymce !== 'undefined' ) {\n                    taskEditor = tinymce.get('task_breakerTaskEditDescription');\n                }\n\n                $('#task_breakerTaskId').val(task.id).removeAttr(\"disabled\");\n\n                $('#task_breakerTaskEditTitle').val(task.title).removeAttr(\"disabled\");\n\n                if ( taskEditor )\n                {\n                    taskEditor.setContent( task.description );\n                } else\n                {\n                    $( '#task_breakerTaskEditDescription' ).val( task.description );\n                }\n\n                $(\"#task-user-assigned-edit\").val('');\n\n                if ( document.getElementById(\"task-user-assigned-edit\") ) {\n                    document.getElementById(\"task-user-assigned-edit\").options.length = 0;\n                }\n\n                $.each( task.assign_users_meta.members_stack, function( key, val ) {\n                    var option = document.createElement(\"option\");\n                        option.value = val.ID;\n                        option.text  = val.display_name;\n                        option.selected  = \"selected\";\n                        document.getElementById(\"task-user-assigned-edit\").appendChild( option );\n                });\n\n                __this.autoSuggestMembers( $(\"#task-user-assigned-edit\"), true, task );\n\n                $( \"#task_breaker-task-edit-select-id\" ).val( task.priority ).change().removeAttr(\"disabled\");\n\n                // Update Files Attached here..\n                $('#task-breaker-form-file-attachment-edit-field').removeAttr('disabled');\n                if ( task.meta ) {\n                    $.each ( task.meta, function( key, val ){\n                        if ( \"file_attachment\" === val.meta_key ) {\n                            var unlink_file_template = '';\n                            $('#taskbreaker-file-attachment-edit .tasbreaker-file-attached').html(val.meta_value);\n                            // Assign the existing file to client file.\n                            taskbreaker_file_attachments.attached_files = val.meta_value;\n                            unlink_file_template += '<a href=\"#\" title=\"Click to remove file attachment\" data-attachment=\"'+val.meta_value+'\">&times;</a>';\n                            $('#taskbreaker-unlink-file-btn').html( unlink_file_template );\n                        }\n                    });\n                } else {\n                    $('#taskbreaker-file-attachment-edit .tasbreaker-file-attached').html('No files attached');\n                    $('#taskbreaker-unlink-file-btn a').remove();\n                }\n\n            }\n\n            return;\n\n        });\n\n    },\n\n    renderTask: function( __callback ) {\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                template: this.template,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( httpResponse ) {\n                __callback( httpResponse );\n            }\n        });\n    },\n\n    render: function() {\n\n        var __this = this;\n        this.progress(true);\n\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                page: this.model.page,\n                search: this.search,\n                priority: this.model.priority,\n                template: 'render_tasks',\n                show_completed: this.model.show_completed,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( response ) {\n\n                __this.progress(false);\n\n                if (response.message == 'success') {\n                    if (response.task.stats) {\n                        // update model max_page and min_page\n                        ThriveProjectModel.max_page = response.task.stats.max_page;\n                        ThriveProjectModel.min_page = response.task.stats.min_page;\n                    }\n                    // render the result\n                    $('#task_breaker-project-tasks').html(response.html);\n                }\n\n                if ( 0 === response.task.length ) {\n                    $('#task_breaker-project-tasks').html('<div class=\"task-breaker-message danger\">No tasks found. Try different keywords and filters.</div>');\n                }\n\n            },\n            error: function() {\n\n            }\n        });\n    },\n\n    initialize: function() {\n\n    },\n\n    progress: function(isShow) {\n\n        var __display = 'none';\n        var __opacity = 1;\n\n        if ( isShow ) {\n            __display = 'block';\n            __opacity = 0.25;\n        }\n\n        $('#task_breaker-preloader').css({\n            display: __display\n        });\n\n        $('#task_breaker-project-tasks').css({\n            opacity: __opacity\n        });\n\n        return;\n    },\n\n    updateStats: function( stats ) {\n\n        var priority = null;\n        var task_status = null;\n\n        if ( stats.status ) {\n            priority = stats.status.priority;\n            task_status = stats.status.task_status;\n        }\n\n        if ( task_status ) {\n            $('#task-details-status').text( task_status ).removeClass(\"open close\").addClass( task_status.toLowerCase() );\n        }\n\n        if ( priority ) {\n            $('#task-details-priority').text( priority ).removeClass(\"normal high critical\").addClass( priority.toLowerCase() );\n        }\n\n        $( '.task_breaker-total-tasks' ).text( stats.total );\n        $( '.task_breaker-remaining-tasks-count' ).text( stats.remaining );\n        $( '.task-progress-completed' ).text( stats.completed );\n        $( '.task-progress-percentage-label > span' ).text( stats.progress );\n\n        // Update the progress bar css width.\n        $( '.task-progress-percentage' ).css({\n            width: Math.ceil( ( ( stats.completed / stats.total ) * 100 ) ) + '%'\n        });\n\n    },\n\n    autoSuggestMembers: function( selectElement, clearSelect, task ) {\n\n        if ( ! selectElement ) {\n            return;\n        }\n\n        var $resultTemplate = function( result ) {\n\n\t\t\tif ( result.avatar ) {\n\n\t\t\t    var $state = $('<span><img class=\"result-template-avatar\" src=\"'+result.avatar+'\" alt=\"s\" />'+result.text+'</span>');\n\t\t\t}\n\n\t\t\treturn $state;\n\t\t}\n\n\n\t\tselectElement.select2({\n\t\t\tmaximumInputLength: 20,\n\t\t\tplaceholder: \"Type member\\'s name...\",\n\t\t\tallowClear: true,\n\t\t\tminimumResultsForSearch: Infinity,\n\t\t\tminimumInputLength: 2,\n\t\t\ttag: true,\n\t\t\tajax: {\n\n\t\t\t\tdata: function ( params ) {\n\n\t\t\t\t\tvar query = {\n\t\t\t\t\t\taction: 'task_breaker_transactions_request',\n\t\t\t\t\t\tmethod: 'task_breaker_transactions_user_suggest',\n\t\t\t\t\t\tnonce: task_breakerProjectSettings.nonce,\n\t\t\t\t\t\tgroup_id: task_breakerProjectSettings.current_group_id,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\tuser_id_collection: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( selectElement.val() ) {\n\t\t\t\t\t\tquery.user_id_collection = selectElement.val();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t\turl: task_breakerAjaxUrl,\n\t\t\t\tdelay: 250,\n\t\t\t\tcache: true\n\t\t\t},\n\t\t\ttemplateResult: $resultTemplate\n\t\t});\n    }\n});\n\nvar ThriveProjectView = new __ThriveProjectView();\n\nvar __ThriveProjectRoute = Backbone.Router.extend({\n\n    routes: {\n        \"tasks\": \"index\",\n        \"tasks/dashboard\": \"dashboard\",\n        \"tasks/settings\": \"settings\",\n        \"tasks/completed\": \"completed_tasks\",\n        \"tasks/add\": \"add\",\n        \"tasks/edit/:id\": \"edit\",\n        \"tasks/page/:page\": \"next\",\n        \"tasks/view/:id\": \"view_task\",\n        \"tasks/search/:search_keyword\": 'search',\n    },\n    view: ThriveProjectView,\n    model: ThriveProjectModel,\n    index: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n        this.model.page = 1;\n        this.model.id = 0;\n        this.model.show_completed = 'no';\n\n        this.view.search = '';\n        this.view.render();\n    },\n\n    dashboard: function() {\n        this.view.switchView(null, '#task_breaker-project-dashboard-context');\n    },\n    settings: function() {\n        this.view.switchView(null, '#task_breaker-project-settings-context');\n    },\n    add: function() {\n        this.view.switchView(null, '#task_breaker-project-add-new-context');\n\n        $('#task_breaker-project-add-new').css('display', 'block');\n        $('#task-user-assigned').val(\"\");\n        this.view.autoSuggestMembers( $(\"#task-user-assigned\"), true, null );\n\n        if ( tinymce.editors.task_breakerTaskDescription ) {\n            tinymce.editors.task_breakerTaskDescription.setContent('');\n        }\n    },\n    completed_tasks: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n\n        this.model.show_completed = 'yes';\n        this.view.render();\n    },\n    edit: function(task_id) {\n        this.view.showEditForm(task_id);\n        $('#task_breaker-edit-task-message').html('');\n    },\n    next: function(page) {\n        this.model.page = page;\n        this.view.render();\n    },\n    view_task: function(task_id) {\n        this.model.id = task_id;\n        this.view.single(task_id);\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n    },\n    search: function(keywords) {\n        this.model.page = 1;\n        this.model.id = 0;\n        this.view.search = keywords;\n        this.view.render();\n    }\n});\n\nvar ThriveProjectRoute = new __ThriveProjectRoute();\n\nThriveProjectRoute.on('route', function(route) {\n    if ('view_task' === route) {\n        this.view.hideFilters();\n    } else {\n        this.view.showFilters();\n    }\n});\n\nBackbone.history.start();\n\n/**\n * This variable is really important for holding client uploaded files.\n * @type string The file name.\n */\n$('#task_breaker-submit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var __taskEditor = tinymce.get( 'task_breakerTaskDescription' );\n\n    if ( __taskEditor ) {\n       taskDescription =  __taskEditor.getContent();\n    } else {\n       taskDescription = $( '#task_breakerTaskDescription' ).val();\n    }\n\n    $.ajax({\n        url: ajaxurl,\n        data: {\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_add_ticket',\n\n            description: taskDescription,\n\n            title: $('#task_breakerTaskTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            priority: $('select#task_breaker-task-priority-select').val(),\n\n            nonce: task_breakerProjectSettings.nonce,\n\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId,\n            user_id_collection: $('select#task-user-assigned').val(),\n            file_attachments: taskbreaker_file_attachments.attached_files\n        },\n\n        method: 'post',\n\n        success: function( message ) {\n\n            // Total tasks view.\n            var total_tasks = parseInt( $('.task_breaker-total-tasks').text().trim() );\n\n            // Remaining tasks view\n            var remaining_tasks = parseInt( $('.task_breaker-remaining-tasks-count').text().trim() );\n\n           // console.log( message );\n\n            if ( message.message === 'success' ) {\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n                $('#task_breakerTaskDescription').val('');\n\n                $('#task_breakerTaskTitle').val('');\n\n                ThriveProjectView.updateStats( message.stats );\n\n                location.href = \"#tasks/view/\" + message.response.id;\n\n            } else {\n\n                $('#task_breaker-add-task-message').html('<p class=\"error\">'+message.response+'</p>').show().addClass('error');\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n            }\n        },\n        error: function() {\n\n        }\n    }); // End $.ajax call.\n}); // End $('#task_breaker-submit-btn').click() call.\n\n/**\n * Attach event to file attachment. When changed upload the file to user logged in '/tmp' directory.\n * @return void\n */\n$('#task-breaker-form-file-attachment-field').on( 'change', function( event ) {\n    \n    taskbreaker_process_file_attachment( event, 'taskbreaker-file-attachment-add' );\n\n    return;\n});\n\ntaskbreaker_file_attachments.attached_files = '';\n\n$('#task_breaker-edit-btn').click( function( e ) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n\n    var taskDescriptionObject = tinymce.get( 'task_breakerTaskEditDescription' );\n\n    if ( taskDescriptionObject ) {\n\n        taskDescription = taskDescriptionObject.getContent();\n\n    } else {\n\n        taskDescription = $('#task_breakerTaskEditDescription').val();\n        \n    }\n\n    var httpRequestParameters = {\n        description: taskDescription,\n        nonce: task_breakerProjectSettings.nonce,\n        project_id: task_breakerTaskConfig.currentProjectId,\n        user_id: task_breakerTaskConfig.currentUserId,\n\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_edit_ticket',\n\n        title: $('#task_breakerTaskEditTitle').val(),\n        milestone_id: $('#task_breakerTaskMilestone').val(),\n        id: $('#task_breakerTaskId').val(),\n        priority: $('select[name=\"task_breaker-task-edit-priority\"]').val(),\n        user_id_collection: $('select#task-user-assigned-edit').val(),\n        file_attachments: taskbreaker_file_attachments.attached_files\n    }\n\n    $.ajax({\n\n        url: ajaxurl,\n        data: httpRequestParameters,\n\n        method: 'post',\n\n        success: function( response ) {\n\n            var message = \"<p class='task-breaker-message success'>Task successfully updated <a href='#tasks/view/\" + response.id + \"'>&#65515; View</a></p>\";\n\n            if ( 'fail' === response.message && 'no_changes' !== response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>There was an error updating the task. All fields are required.</a></p>\";\n\n            }\n\n            if ( 'fail' === response.message && 'unauthorized' === response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>You are not allowed to modify this task. Only group project administrators and group projects moderators are allowed.</a></p>\";\n\n            }\n\n            $('#task_breaker-edit-task-message').html( message ).show();\n\n            element.attr('disabled', false);\n\n            element.text('Update Task');\n\n            $('html, body').animate({\n                scrollTop: $(\"#task_breaker-edit-task-message\").offset().top - 300\n            }, 100);\n\n            return;\n\n        },\n\n        error: function() {\n\n            // Todo: Better handling of http errors and timeouts.\n            console.log('An Error Occured [task_breaker.js]#311');\n\n            return;\n        }\n    });\n}); // end $('#task_breaker-edit-btn').click()\n\n/**\n * Attach event to file attachment. When changed upload the file to user logged in '/tmp' directory.\n * @return void\n */\n$('#task-breaker-form-file-attachment-edit-field').on( 'change', function( event ) {\n    console.log('test');\n    var form_attr = {\n        'edit_file_attachment': 'yes'\n    };\n    taskbreaker_process_file_attachment( event, 'taskbreaker-file-attachment-edit', form_attr  );\n\n    return;\n});\n\n$('#task_breaker-project').on('click', '#taskbreaker-unlink-file-btn > a', function(e){\n    e.preventDefault();\n    var __confirm = confirm(\"Are you sure you want to delete this file attachment? This process is not reversible.\");\n        if ( __confirm ) {\n            console.log('deleting file...');\n        }\n    var __ticket_id = $('#task_breakerTaskId').val();\n    $('.tasbreaker-file-attached').html('Deleting file attachment...');\n    $.ajax({\n        method: 'POST',\n        url: task_breakerAjaxUrl,\n        data: {\n            nonce: task_breakerProjectSettings.nonce,\n            ticket_id: __ticket_id,\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_delete_ticket_attachment'\n        },\n        success: function( response ) {\n            $('.tasbreaker-file-attached').html('No files attached');\n            $('#taskbreaker-unlink-file-btn > a').remove();\n            // Clear the flies\n            taskbreaker_file_attachments.attached_files = '';\n        }\n    });   \n});\n // Delete Task Single\n $('body').on('click', '#task_breaker-delete-btn', function() {\n\n    var _delete_confirm = confirm(\"Are you sure you want to delete this task? This action is irreversible\");\n\n    if (!_delete_confirm) {\n       return;\n    }\n\n    var $element = $(this);\n\n    var task_id = parseInt( ThriveProjectModel.id );\n\n    var task_project_id = parseInt( ThriveProjectModel.project_id );\n\n    var __http_params = {\n\n       action: 'task_breaker_transactions_request',\n       method: 'task_breaker_transaction_delete_ticket',\n       id: task_id,\n       project_id: task_project_id,\n       nonce: task_breakerProjectSettings.nonce\n\n   };\n\n   ThriveProjectView.progress(true);\n\n   $element.text('Deleting ...');\n\n   $.ajax({\n\n       url: ajaxurl,\n       data: __http_params,\n       method: 'post',\n       success: function( response ) {\n\n            ThriveProjectView.progress( false );\n\n            ThriveProjectView.updateStats( response.stats );\n\n            if ( 'fail' === response.message) {\n\n                var message = \"<p class='task-breaker-message danger'>\"+response.message_text+\"</p>\";\n                \n                $('#task_breaker-edit-task-message').html( message ).show();\n\n                return false;\n\n            } else {\n\n                location.href = \"#tasks\";\n\n                ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n                \n            }\n\n            $element.text('Delete');\n\n       },\n\n       error: function() {\n\n           ThriveProjectView.progress(false);\n\n           $element.text('Delete');\n\n       }\n   });\n }); // End Delete Task\n\n  $('body').on('click', '#updateTaskBtn', function() {\n\n      var updateTaskBtn = $(this);\n\n      updateTaskBtn.attr('disabled', 'disabled');\n\n      var comment_ticket_id = ThriveProjectModel.id,\n          comment_details = $('#task-comment-content').val(),\n          task_priority = $('#task_breaker-task-priority-update-select').val(),\n          comment_completed = $('input[name=task_commment_completed]:checked').val(),\n          task_project_id = parseInt( ThriveProjectModel.project_id );\n\n      if (0 === comment_ticket_id) {\n          return;\n      }\n\n      // notify the user when submitting the comment form\n      ThriveProjectView.progress(true);\n\n      var __http_params = {\n          action: 'task_breaker_transactions_request',\n          method: 'task_breaker_transaction_add_comment_to_ticket',\n          ticket_id: comment_ticket_id,\n          priority: task_priority,\n          details: comment_details,\n          completed: comment_completed,\n          project_id: task_project_id,\n          nonce: task_breakerProjectSettings.nonce\n      };\n\n      $.ajax({\n          url: ajaxurl,\n          data: __http_params,\n          method: 'post',\n          success: function( response ) {\n\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress( false );\n\n              $('#task-comment-content').val('');\n              $('#task-lists').append(response.result);\n\n\n              if (\"yes\" === comment_completed) {\n\n                  // disable old radios\n                  $('#ticketStatusInProgress').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusComplete').attr('disabled', true).attr('checked', false);\n                  $('#comment-completed-radio').addClass('hide');\n                  // enable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', false);\n                  $('#task_breaker-comment-completed-radio').removeClass('hide');\n\n              }\n\n              if ( \"reopen\" === comment_completed ) {\n\n                  // Enable old radios\n                  $('#ticketStatusInProgress').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusComplete').attr('disabled', false).attr('checked', false);\n                  $('#comment-completed-radio').removeClass('hide');\n                  // Disable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', true);\n                  $('#task_breaker-comment-completed-radio').addClass('hide');\n\n              }\n              // console.log(response.stats);\n              ThriveProjectView.updateStats( response.stats );\n          },\n          error: function() {\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress(false);\n          }\n      });\n  }); // end UpdateTask\n\n// Delete Comment Event.\n$('body').on('click', 'a.task_breaker-delete-comment', function(e) {\n\n    e.preventDefault();\n\n    // Ask the user to confirm if he/she really wanted to delete the task comment.\n    var confirm_delete = confirm(\"Are you sure you want to delete this comment? This action is irreversible. \");\n\n    // Exit if the user decided to cancel the task comment.\n    if (!confirm_delete) {\n        return false;\n    }\n\n    var $element = $(this);\n\n    var comment_ticket = parseInt($(this).attr('data-comment-id'));\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_delete_comment',\n        comment_id: comment_ticket,\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    // Send request to server to delete the comment.\n    ThriveProjectView.progress(true);\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            if (response.message == 'success') {\n\n                $element.parent().parent().parent().parent().fadeOut(function() {\n                    $(this).remove();\n                });\n\n            } else {\n\n                this.error();\n\n            }\n        },\n        error: function() {\n            ThriveProjectView.progress(false);\n            $element.parent().append('<p class=\"error\">Transaction Error: There was an error trying to delete this comment.</p>');\n        }\n    });\n}); // end Delete Comment\n\n/**\n * Add new project script\n *\n * @Todo: Current handle for adding project is inside archive.js\n */\n\n// Update Project\n$('body').on('click', '#task_breakerUpdateProjectBtn', function() {\n\n    var element = $(this);\n\n    var projectContent = \"\";\n\n    var __projectContentObj = tinymce.get( 'task_breakerProjectContent' );\n\n        if ( __projectContentObj ) {\n\n            projectContent = __projectContentObj.getContent();\n\n        } else {\n\n            projectContent = $('#task_breakerProjectContent').val();\n\n        }\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transactions_update_project',\n        id: parseInt( $('#task_breaker-project-id').val() ),\n        title: $( '#task_breaker-project-name' ).val(),\n        content: projectContent,\n        group_id: parseInt( $('select[name=task_breaker-project-assigned-group]').val() ),\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    element.attr('disabled', true).text('Updating ...');\n\n    ThriveProjectView.progress(true);\n\n    $('.task_breaker-project-updated').remove();\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            element.attr('disabled', false).text('Update Project');\n\n            if (response.message === 'success') {\n\n                // Update the project title.\n                $('article .entry-header > .entry-title').text($('#task_breaker-project-name').val());\n\n                element.parent().parent().prepend(\n                    '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                    '<p>Project details successfully updated.</p>' +\n                    '</div>'\n                );\n\n                location.reload();\n\n            } else {\n\n                if (\"authentication_error\" === response.type ) {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated error updated\">' +\n                        '<p>Only group administrators and moderators can update the project settings.</p>' +\n                        '</div>'\n                    );\n\n                } else {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                        '<p>There was an error saving the project. All fields are required.</p>' +\n                        '</div>'\n                    );\n\n                }\n\n            }\n\n            ThriveProjectView.progress(false);\n\n            setTimeout(function() {\n\n                $('.task_breaker-project-updated').fadeOut();\n\n            }, 3000);\n\n            return;\n\n        },\n\n        error: function() {\n\n            alert('connection failure');\n            return;\n\n        }\n    });\n}); // Project Update End.\n\n $('body').on('click', '#task_breakerDeleteProjectBtn', function() {\n\n\n     if ( !confirm('Are you sure you want to delete this project? All the tickets under this project will be deleted as well. This action cannot be undone.')) {\n         return;\n     }\n\n     var project_id = $('#task_breaker-project-id').val();\n\n     var __http_params = {\n         action: 'task_breaker_transactions_request',\n         method: 'task_breaker_transactions_delete_project',\n         id: project_id,\n         nonce: task_breakerProjectSettings.nonce\n     };\n\n     $(this).text('Deleting...');\n\n     $.ajax({\n\n         url: ajaxurl,\n\n         method: 'post',\n\n         data: __http_params,\n\n         success: function( response ) {\n\n             if (response.message == 'success') {\n\n                 window.location = response.redirect;\n\n             } else {\n\n                this.error();\n\n             }\n\n             return;\n\n         },\n\n         error: function() {\n\n            alert('There was an error trying to delete this post. Try again later.');\n\n         }\n     });\n\n });\n\n}); // end $(window).load();\n}); // end jQuery(document).ready();\n"]}